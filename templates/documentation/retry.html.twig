{% extends 'docs.html.twig' %}

{% block title %}Aeon PHP - Retry - Documentation{% endblock %}

{% block body %}
    <div class="row doc-content-body">
        <article class="col-md-9">
        <section id="calendar-interface">
            <h5 class="section-title-2">Retry</h5>
            <hr/>
            Available versions:
            <ul>
                {% for version, src in versions %}
                    <li><a href="{{ path('docs_retry_version', { version: version }) }}">{{ version }}</a></li>
                {% endfor %}
            </ul>
        </section>
        <section>
            <h3>Installation</h3>
            <p>
                <code class="code">composer require aeon-php/retry</code>
            </p>
        </section>
        <section>
            <h3>Description</h3>

            <p>
                Retry operations that might fail like for example http requests, with different
                delay modifiers.
            </p>

            <pre><code class="language-php">{% apply spaceless  %}
&lt;?php

use Aeon\Calendar\TimeUnit;
use Aeon\Retry\Execution;
use function Aeon\Retry\retry;

$result = retry(function (Execution $execution) {
    $random = \random_int(1, 3);

    if ($random === 2) {
        throw new \RuntimeException('exception');
    }

    return $random;
}, 3, TimeUnit::seconds(3));
{% endapply %}</code></pre>

            <p>
                Object implementation that multiplies delays by retry number after each failure.
            </p>

            <pre><code class="language-php">{% apply spaceless  %}
&lt;?php

use Aeon\Calendar\System\SystemProcess;
use Aeon\Calendar\TimeUnit;
use Aeon\Retry\DelayModifier\RetryMultiplyDelay;
use Aeon\Retry\Execution;
use Aeon\Retry\Retry;

return (new Retry(
        SystemProcess::current(),
        5,
        TimeUnit::milliseconds(100)
    ))->modifyDelay(
        new RetryMultiplyDelay()
    )->execute(function (Execution $execution) {
        $random = \random_int(1, 3);

        if ($random === 2) {
            throw new \RuntimeException('exception');
        }

        return $random;
    });
            {% endapply %}</code></pre>

        </section>
        </article>
        <aside class="col-md-3">
            <div class="sticky">
                <section class="text-center">
                    <a href="https://github.com/aeon-php/website/blob/1.x/templates/{{ _self }}" class="btn btn-secondary p-1" target="_blank"><i class="fab fa-github"></i> Edit this page</a>
                </section>
            </div>
        </aside>
    </div>
{% endblock %}
